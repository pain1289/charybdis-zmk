#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NUFU 1
#define SYM 2
#define NAV 3
#define MED 4
#define POI 5
#define SCR 6
#define SNI 7

&sl { release-after-ms = <250>; };

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        parent_left_1 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        parent_right {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <15 16>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 24>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <25 26>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <12 13>;
        };

        back_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <16 17>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
  &kp Q        &kp W        &kp E         &kp R         &kp T      &kp Y         &kp U            &kp I         &kp O        &kp P
  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G      &kp H         &hml RSHFT J     &hml RCTRL K  &hml RALT L  &hml RGUI SEMICOLON
  &lt 4 Z      &kp X        &kp C         &kp V         &kp B      &kp N         &kp M            &kp COMMA     &kp DOT      &lt 4 SLASH
                            &kp LEFT_WIN  &lt 3 SPACE   &kp ESC    &lt 1 RETURN  &lt 2 BACKSPACE
            >;
        };

        NuFu {
            label = "Numeral/Function";
            bindings = <
  &trans  &kp F7  &kp F8  &kp F9  &kp F12    &trans  &kp N7  &kp N8  &kp N9  &kp DELETE
  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &kp N4  &kp N5  &kp N6  &kp BACKSPACE
  &trans  &kp F1  &kp F2  &kp F3  &kp F10    &trans  &kp N1  &kp N2  &kp N3  &trans
                  &trans  &trans  &trans     &trans  &kp N0
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
  &kp TILDE  &kp AMPS  &kp STAR   &trans     &kp PLUS     &trans  &kp LBRC  &kp RBRC  &trans   &kp PIPE
  &kp MINUS  &kp DLLR  &kp PRCNT  &kp CARET  &kp EQUAL    &trans  &kp LPAR  &kp RPAR  &kp DQT  &kp APOS
  &kp UNDER  &kp EXCL  &kp AT     &kp HASH   &kp GRAVE    &trans  &kp LBKT  &kp RBKT  &trans   &kp BSLH
                       &trans     &trans     &trans       &trans  &trans
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans    &trans         &kp TAB      &trans     &kp DELETE
  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp BACKSPACE
  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp INS
                  &trans  &trans  &trans    &trans    &trans
            >;
        };

        Pointer {
            label = "Pointer";
            bindings = <
  &trans    &trans    &trans     &trans     &trans       &trans     &trans     &trans     &trans    &trans
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans       &trans     &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
  &trans    &mo 0     &mo 0      &trans     &trans       &trans     &trans     &tog 0     &tog 0    &trans
                      &mkp RCLK  &mkp LCLK  &mkp MCLK    &mkp MCLK  &mkp LCLK
            >;
        };

        media {
            bindings = <
  &trans      &trans      &trans        &trans           &trans              &trans  &trans          &trans        &trans          &trans
  &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE    &trans  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
  &trans      &trans      &trans        &trans           &trans              &trans  &trans          &trans        &trans          &trans
                          &trans        &trans           &trans              &trans  &trans
            >;
        };
    };
};
